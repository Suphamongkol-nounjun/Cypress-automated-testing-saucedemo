name: ZAP Full Scan with Juice Shop (Port 4000)

on:
  push:
    branches:
      - main # Trigger เมื่อมีการ push ไปยัง branch main
  pull_request:
    branches:
      - main # Trigger เมื่อมีการสร้างหรืออัปเดต Pull Request ไปยัง branch main
  workflow_dispatch: # อนุญาตให้รันด้วยมือจากหน้า Actions ของ GitHub

jobs:
  full-dast-scan:
    runs-on: ubuntu-latest
    name: Full Scan Juice Shop Web Application

    permissions:
      issues: write # อนุญาตให้ ZAP Action สร้าง Issue บน GitHub (ถ้าพบช่องโหว่)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start Juice Shop (Direct Docker Run on Port 4000)
      # รัน Juice Shop ใน Docker Container บน GitHub Actions runner
      # -d: รันในโหมด detached (background)
      # -p 4000:3000: Map port 3000 ของ Juice Shop ใน Container ไปยัง port 4000 ของ Host (runner)
      # --name juice-shop-container: ตั้งชื่อ Container เพื่อให้ง่ายต่อการอ้างอิงตอนหยุด
      run: |
        docker run -d -p 4000:3000 --name juice-shop-container bkimminich/juice-shop:v16.0.0
        echo "Juice Shop container started on port 4000."

    - name: Wait for Juice Shop to be ready on Port 4000
      # ตรวจสอบว่า Juice Shop พร้อมทำงานบน http://localhost:4000 ของ GitHub Actions runner
      run: |
        echo "Waiting for Juice Shop (http://localhost:4000) to be ready..."
        # Loop ตรวจสอบสถานะทุก 1 วินาที สูงสุด 60 ครั้ง (60 วินาที)
        for i in $(seq 1 60); do
          curl -s http://localhost:4000 > /dev/null && break # ตรวจสอบการตอบกลับ HTTP OK
          echo "Juice Shop not ready yet, waiting 1 second..."
          sleep 1
          if [ $i -eq 60 ]; then
            echo "Error: Juice Shop did not start in time. Exiting."
            exit 1
          fi
        done
        echo "Juice Shop is ready on port 4000."

    - name: Run ZAP Full Scan
      # ใช้ zaproxy/action-full-scan เพื่อทำการสแกน Active Scan
      uses: zaproxy/action-full-scan@v0.12.0 # ใช้เวอร์ชันล่าสุดที่แนะนำ (ณ ปัจจุบัน v0.12.0)
      with:
        token: ${{ secrets.GITHUB_TOKEN }} # ใช้ GitHub Token สำหรับการสร้าง Issue/PR comment
        target: 'http://localhost:4000' # กำหนด URL เป้าหมายสำหรับ ZAP (Juice Shop ที่รันบนพอร์ต 4000)
        # docker_name: 'ghcr.io/zaproxy/zaproxy:stable' # Optional: ถ้าต้องการระบุ image เอง (default ก็มักจะใช้ตัวนี้)
        cmd_options: '-a -j' # -a: Active Scan, -j: Jenkins mode (exit with non-zero if issues found)
        # rules_file_name: '.zap/rules.tsv' # Optional: ถ้ามีไฟล์กฎที่กำหนดเอง
        # issue_title: 'ZAP Full Scan Report' # Optional: กำหนดชื่อของ GitHub Issue ที่จะสร้าง
        allow_issue_writing: true # อนุญาตให้ ZAP Action สร้าง GitHub Issue หากพบช่องโหว่

    - name: Upload ZAP Reports
      # ZAP action จะสร้างรายงานไว้ในโฟลเดอร์ชื่อ 'zap_report/' โดยอัตโนมัติ
      # และจะสร้างรายงานในรูปแบบ HTML และ MD เป็นหลัก (คุณอาจต้องตรวจสอบเอกสาร Action สำหรับรูปแบบอื่น)
      uses: actions/upload-artifact@v4
      with:
        name: zap-full-scan-reports
        path: zap_report/ # Path นี้คือ default ที่ zaproxy/action-full-scan สร้างรายงานไว้
        retention-days: 7 # เก็บ Artifact ไว้ 7 วัน

    - name: Stop Juice Shop container
      # Cleanup: หยุดและลบ Juice Shop container หลังจากสแกนเสร็จสิ้น
      # if: always() ทำให้ขั้นตอนนี้รันเสมอ ไม่ว่าจะเกิดข้อผิดพลาดในขั้นตอนก่อนหน้าหรือไม่ก็ตาม
      run: |
        docker stop juice-shop-container
        docker rm juice-shop-container
      if: always()